name:  demo reports

on:
  push:
    branches: 
      - main
      - master
  pull_request:
    branches: ["main", "master"]
  workflow_dispatch:

env:
  IMAGE_NAME: "tis-devops-api"
  DOCKER_USERNAME: "abhishek976772"  # Replace with your Docker Hub username

jobs:
  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/

      - name: Semantic Versioning
        uses: cycjimmy/semantic-release-action@v3
        id: versioning
        with:
          branches: |
            [
              "master",
              {
                "name": "main",
                "prerelease": true
              }
            ]
          extra_plugins: |
            conventional-changelog-eslint@4.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        if: steps.versioning.outputs.new_release_published == 'true'
        run: |
          docker build -t docker.io/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.versioning.outputs.new_release_version }} .
          docker push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.versioning.outputs.new_release_version }}

      - name: Deploy to DEV
        if: steps.versioning.outputs.new_release_published == 'true' && github.ref == 'refs/heads/alpha'
        run: |
          pwsh -f GitHub.ps1 -token ${{ secrets.PAT }} -environment uat -version ${{ steps.versioning.outputs.new_release_version }}

      - name: Deploy to UAT
        if: steps.versioning.outputs.new_release_published == 'true' && github.ref == 'refs/heads/uat'
        run: |
          pwsh -f GitHub.ps1 -token ${{ secrets.PAT }} -environment uat -version ${{ steps.versioning.outputs.new_release_version }}
